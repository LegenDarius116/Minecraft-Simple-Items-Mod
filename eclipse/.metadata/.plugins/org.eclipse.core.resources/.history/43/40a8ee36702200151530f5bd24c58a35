package com.legendarius.simpleItemsMod;

import com.legendarius.simpleItemsMod.item.HolySword;
import com.legendarius.simpleItemsMod.item.ReinforcedHolySword;

import net.minecraft.block.Block;
import net.minecraft.block.material.Material;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraftforge.common.util.EnumHelper;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.registry.GameRegistry;

@Mod(modid = "sim", name = "Simple Items Mod", version = "1.0")
public class SimpleItemsMod {
	// New Material
	public static Item adminium;
	
	// New Toolset. 3 Tiers of each set
	public static Item holySword;
	public static Item reinforcedHolySword;
	public static Item godSword;
	
	// Random Block. Created by mixing golding nuggets and sand?
	// Add to water potion --> crystal fluid
	// Crystal fluid in furnace --> adminium
	public static Block glitteringSand;
	public static Block adminiumBlock;
	
	public static final Item.ToolMaterial adminiumMaterial = EnumHelper.addToolMaterial("adminium", 3, 1800, 9.5F, 4.0F, 20);
	
	// Second tier material: +30% maxUses, +30% efficiency, +30% damage
	public static final Item.ToolMaterial reinforcedAdminiumMaterial = EnumHelper.addToolMaterial("adminium2", 3, 2340, 9.5F, 5.2F, 20);
	
	// Third tier material: +100% maxUses, +50% efficiency, +60% damage (from reinforced), +15% enchantability
	public static final Item.ToolMaterial legendaryAdminiumMaterial = EnumHelper.addToolMaterial("adminium3", 3, 4680, 14.25F, 15.2F, 23);
	
	@EventHandler
	public void preInit(FMLPreInitializationEvent event){
		//Item/Block init and registering
		//Config handling 
		adminium = new Adminium().setUnlocalizedName("adminium").setTextureName("sim:adminium");
		
		holySword = new HolySword(adminiumMaterial).setUnlocalizedName("holySword").setTextureName("sim:holySword"); //returns item.holySword
		reinforcedHolySword = new ReinforcedHolySword(reinforcedAdminiumMaterial).setUnlocalizedName("reinforcedHolySword").setTextureName("sim:holysword2");
		godSword = new GodSword(legendaryAdminiumMaterial).setUnlocalizedName("legendaryHolySword").setTextureName("sim:holysword3");
		
		glitteringSand = new GlitteringSand(Material.sand).setBlockName("glitteringSand").setBlockTextureName("sim:glitteringSand");
		adminiumBlock = new AdminiumBlock(Material.rock).setBlockName("adminiumBlock").setBlockTextureName("sim:adminiumBlock");
		
		GameRegistry.registerItem(adminium, adminium.getUnlocalizedName().substring(5));
		GameRegistry.registerItem(holySword, holySword.getUnlocalizedName().substring(5));
		GameRegistry.registerItem(reinforcedHolySword, reinforcedHolySword.getUnlocalizedName().substring(5));
		GameRegistry.registerItem(godSword, godSword.getUnlocalizedName().substring(5));
		
		GameRegistry.registerBlock(glitteringSand, glitteringSand.getUnlocalizedName().substring(5));
		GameRegistry.registerBlock(adminiumBlock, adminiumBlock.getUnlocalizedName().substring(5));
	}
	
	@EventHandler
	public void init(FMLInitializationEvent event) {
		//Proxy. TileEntity, entity, GUI, and Packet Registering
		GameRegistry.addRecipe(new ItemStack(adminiumBlock), new Object[]{"aaa", 
																		  "aaa", 
																		  "aaa", 'a', adminium});
		GameRegistry.addShapelessRecipe(new ItemStack(adminium, 9), new Object[]{adminiumBlock});
		
		GameRegistry.addRecipe(new ItemStack(holySword), new Object[]{"a", 
																	  "a", 
																	  "s", 'a', adminium, 's', Items.stick});
		
		GameRegistry.addShapelessRecipe(new ItemStack(reinforcedHolySword), new Object[]{holySword, adminium, adminium, adminium});
		GameRegistry.addShapelessRecipe(new ItemStack(godSword), new Object[]{reinforcedHolySword, adminiumBlock, adminiumBlock, adminiumBlock, Blocks.diamond_block, Blocks.emerald_block});
	}
	
	@EventHandler
	public void postInit(FMLPostInitializationEvent event) {
		//Get list of blocks from every mod
	}
}
